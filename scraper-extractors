{
    ('arxiv.org', (
        ('title', ('#abs', 'h1'), '(lambda text: text[6:])'),
        ('authors', ('#abs', 'div[2]'), "(lambda text: tuple(text[8:].split(',')))"),
        ('doi', ('#abs', 'div[3]', 'table', 'tr[3]', 'td[2]', 'a'), '(lambda text: text)'),
        ('year', ('#abs', 'div[1]'), "(lambda text: re.findall('[0-9]{4}', text)[-1])"),
    )),
    ('journals.plos.org', (
        ('authors', ('#floatAuthorList',), "(lambda text: tuple(text.split(',')))"),
        ('volume', ('#section1', 'p[2]', 'em[1]', 'sub'), '(lambda text: text)'),
        ('title', ('html', 'head', 'title'), '(lambda text: text)'),
        ('journal', ('#publish', 'div', 'div', 'div', 'p[1]', 'em'), '(lambda text: text)'),
        ('year', ('#artPubDate',), '(lambda text: text.strip()[-4:])'),
    )),
    ('link.springer.com', (
        ('title', ('#main-content', 'main', 'article', 'div[1]', 'header', 'h1'), '(lambda text: text)'),
        ('authors', ('#main-content', 'main', 'article', 'div[1]', 'header', 'ul[2]'), "(lambda text: tuple(re.sub('[0-9&]', '', author) for author in text.split(',') if re.search('[a-z]', author, flags=re.IGNORECASE)))"),
        ('journal', ('#main-content', 'main', 'article', 'div[1]', 'header', 'p', 'a[1]', 'i'), '(lambda text: text)'),
        ('volume', ('#article-info-content', 'div', 'div[2]', 'p[1]', 'b'), "(lambda text: text.strip(', '))"),
        ('pages', ('#main-content', 'main', 'article', 'div[1]', 'header', 'p'), "(lambda text: tuple(re.findall('[0-9]+', text[text.index('pages') + 5:])[:2]))"),
        ('year', ('#main-content', 'main', 'article', 'div[1]', 'header', 'p', 'span[4]'), '(lambda text: text)'),
    )),
    ('www.nature.com', (
        ('journal', ('#content', 'div', 'div', 'article', 'div[1]', 'div[1]', 'header', 'p', 'a[1]', 'i'), '(lambda text: text)'),
        ('doi', ('#article-info-content', 'div', 'div[2]', 'ul', 'li[4]', 'p', 'span[2]', 'a'), '(lambda text: text)'),
        ('title', ('#content', 'div', 'div', 'article', 'div[1]', 'div[1]', 'header', 'h1'), '(lambda text: text)'),
        ('volume', ('#Sec1-content', 'p[1]', 'sup[10]'), '(lambda text: text)'),
        ('year', ('#content', 'div', 'div', 'article', 'div[1]', 'div[1]', 'header', 'p', 'span[2]'), '(lambda text: text)'),
        ('authors', ('#content', 'div', 'div', 'article', 'div[1]', 'div[1]', 'header', 'ul[2]'), "(lambda text: tuple(re.sub('ORCID[^,]*,', '', re.sub('[0-9]', '', text)).replace('&', ',').strip(',').split(',')))"),
    )),
}
