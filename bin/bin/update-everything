#!/bin/bash

# this script needs to be a bash script for the Icon\r removal to work
# I honestly don't understand why

if_exists_do() {
	if [ -d "$2" ]; then
		echo "$1"
		pushd "$2" >/dev/null 2>&1
		bash -c "$3"
		popd >/dev/null 2>&1
		echo
	fi
}

if which brew >/dev/null 2>&1; then
	brew update && brew upgrade && brew cleanup
	brew cask list 2>/dev/null | while read package; do
		package="$(echo "$package" | sed 's/ .*//g')"
		current="$(brew cask list --versions "$package" | sed 's/.* //')"
		newest="$(brew cask info "$package" | head -n 1 | sed 's/.* //')"
		if [ "$current" != "$newest" ]; then
			echo "$package $current $newest"
			brew cask reinstall "$package"
		fi
	done
	brew cask cleanup
	echo
fi

if which cabal >/dev/null 2>&1; then
	cabal update
	echo
fi

if which pacaur >/dev/null 2>&1; then
	pacaur -Syu
	echo
fi

if which python3 >/dev/null 2>&1 && python3 -m pip > /dev/null 2>&1; then
	python3 -m pip list --outdated --format=freeze | sed 's/=.*//;' | xargs python3 -m pip install --upgrade
fi

if [ -d "$HOME/Desktop" ]; then
	cd "$HOME/Desktop" || exit
	echo "removing old vim undo files ~/Desktop..."
	orphan-undos | sed 's/^/	/'
fi

if [ -d "$HOME/Dropbox" ]; then
	cd "$HOME/Dropbox" || exit

	# remove old vim undo files
	echo "removing old vim undo files from ~/Dropbox..."
	orphan-undos | sed 's/^/	/'

	# remove OS files
	echo "removing OS files..."
	find . -name "$(echo -e "Icon\r")" | while read f; do
		echo "	deleted $f"
	done
	find . -name "$(echo -e "Icon\r")" -delete
	find . -name .DS_Store | while read f; do
		rm -f "$f" && echo "	deleted $f"
	done
	find . -name __MACOSX | while read f; do
		rm -f "$f" && echo "	deleted $f"
	done

	# merge command line history
	echo "merging command line history..."
	filename="$(mktemp /tmp/histfix.XXXXXX)"
	sort $HOME/Dropbox/personal/logs/shell_history* | uniq | sed 's/ \+$//' > "$filename"
	mv -f "$filename" "$HOME/Dropbox/personal/logs/shell_history"
	find "$HOME/Dropbox/personal/logs/" -name 'shell_history *' | while read line; do
		rm -f "$line"
	done

	# set directories to correct permissions
	echo "correcting directory permissions..."
	find . -type d -perm 777 | while read f; do
		chmod 755 "$f" && echo "	fixed permissions of $f"
	done

	# find any conflicting files
	echo "finding conflicted files..."
	find . -name '*conflicted*' | grep -v '\.dropbox\.cache' | sed 's/^/found /; s/^/	/;'

fi
echo

if [ -d "$HOME/papers" ]; then
	libsync get
fi

nvim -c ':PlugUpgrade | qa!'
if_exists_do "updating nvim plugins" "$HOME/.config/nvim/plugged" "git-all pull"

if_exists_do "updating ACT-R" "$HOME/act-r" "svn update"
if_exists_do "updating git repos" "$HOME/git" "git-all pull"
if_exists_do "cleaning git repos" "$HOME/git" "orphan-undos"
